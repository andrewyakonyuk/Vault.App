@{
    Layout = "_LayoutBase";
    ViewBag.BodyClass = "cover-page";
}
<div class="site-wrapper">
    <div class="site-wrapper-inner">
        <div class="cover-container">
            <div class="masthead clearfix">
                <div class="inner">
                    <h3 class="masthead-brand">
                        <a asp-controller="Home" asp-action="Index">
                            <img src="@Url.Content("~/img/user.png")" height="40" width="40" style="margin-top:-10px" class="img-circle" />
                        </a>
                    </h3>
                    <nav>
                        <ul class="nav masthead-nav">
                            @if (Context.User.Identity.IsAuthenticated)
                            {
                                <li><a asp-controller="Boards" asp-action="Index" asp-route-username="@Context.User.Identity.Name">@Context.User.Identity.Name</a> </li>
                            }
                            else
                            {
                                <li class="@When(IsCurrentPage("SignIn", "Account"), "active")"><a asp-controller="Account" asp-action="SignIn">Sign in</a></li>
                            }
                            <li class="@When(IsCurrentPage("About", "Home"), "active")"><a asp-controller="Home" asp-action="About">Features</a></li>
                        </ul>
                    </nav>
                </div>
            </div>
            <div class="inner cover">
                @RenderBody()
            </div>
            <div class="mastfoot">
                <div class="inner">
                    <p>made by <a href="https://twitter.com/martmartius">@@martmartius</a>.</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="snackbar">
    <div class="snackbar-text">Snackbar</div>
    <div class="snackbar-action">Undo</div>
</div>

@functions{
    bool IsCurrentPage(string action, string controller)
    {
        if (ViewContext.ActionDescriptor.Id == action && string.Equals((string)ViewContext.RouteData.Values["controller"], controller, StringComparison.InvariantCultureIgnoreCase))
            return true;

        return false;
    }

    HtmlString When(bool condition, string result)
    {
        if (condition)
            return new HtmlString(result);

        return HtmlString.Empty;
    }
}